syntax = "proto3";
import "value.proto";
import "relational_frame.proto";
import "graph_frame.proto";
import "document_frame.proto";
import "meta.proto";
import "namespace_meta.proto";
import "statement_requests.proto";


option java_multiple_files = true;
option java_package = "org.polypheny.db.protointerface.proto";
option java_outer_classname = "ProtoInterfaceProto";

package polypheny.protointerface;

service ProtoInterface {
  // NewMetaFunctions
  rpc GetNamespaces(NamespacesRequest) returns (NamespacesResponse) {}

  // Meta functions
  rpc GetDbmsVersion(DbmsVersionRequest) returns (DbmsVersionResponse) {}
  rpc GetSupportedLanguages(LanguageRequest) returns (LanguageResponse) {}
  rpc GetDatabases(DatabasesRequest) returns (DatabasesResponse) {}
  rpc GetTableTypes(TableTypesRequest) returns (TableTypesResponse) {}
  rpc GetTypes(TypesRequest) returns (TypesResponse) {}
  rpc GetUserDefinedTypes(UserDefinedTypesRequest) returns (UserDefinedTypesResponse) {}
  rpc GetClientInfoPropertyMetas(ClientInfoPropertyMetaRequest) returns (ClientInfoPropertyMetaResponse){}
  rpc SearchProcedures(ProceduresRequest) returns (ProceduresResponse) {}
  rpc SearchFunctions(FunctionsRequest) returns (FunctionsResponse) {}
  rpc SearchNamespaces(NamespacesRequest) returns (NamespacesResponse) {}
  rpc getNamespace(NamespaceRequest) returns (Namespace) {}
  rpc SearchEntities(EntitiesRequest) returns (EntitiesResponse) {}
  rpc getSqlStringFunctions(SqlStringFunctionsRequest) returns (MetaStringResponse) {}
  rpc getSqlSystemFunctions(SqlSystemFunctionsRequest) returns (MetaStringResponse) {}
  rpc getSqlTimeDateFunctions(SqlTimeDateFunctionsRequest) returns (MetaStringResponse) {}
  rpc getSqlNumericFunctions(SqlNumericFunctionsRequest) returns (MetaStringResponse) {}
  rpc getSqlKeywords(SqlKeywordsRequest) returns (MetaStringResponse) {}
  // Connection related
  rpc Connect(ConnectionRequest) returns (ConnectionReply) {}
  rpc CheckConnection(ConnectionCheckRequest) returns (ConnectionCheckResponse) {}
  rpc Disconnect(DisconnectionRequest) returns (DisconnectionResponse) {}
  rpc GetClientInfoProperties(ClientInfoPropertiesRequest) returns (ClientInfoProperties) {}
  rpc SetClientInfoProperties(ClientInfoProperties) returns (ClientInfoPropertiesResponse) {}
  // Unparameterized statements
  rpc ExecuteUnparameterizedStatement(UnparameterizedStatement) returns (stream StatementStatus) {}
  rpc ExecuteUnparameterizedStatementBatch(UnparameterizedStatementBatch) returns (stream StatementBatchStatus) {}
  // Prepared Statements
  rpc PrepareIndexedStatement(PreparedStatement) returns (PreparedStatementSignature) {}
  rpc ExecuteIndexedStatement(ParameterList) returns (StatementResult){}
  rpc ExecuteIndexedStatementBatch(IndexedParameterBatch) returns (StatementBatchStatus){}
  rpc PrepareNamedStatement(PreparedStatement) returns (PreparedStatementSignature) {}
  rpc ExecuteNamedStatement(ParameterSet) returns (StatementResult){}
  // Results
  rpc FetchResult(FetchRequest) returns (Frame) {}
  // Transaction handling
  rpc CloseStatement(CloseStatementRequest) returns (CloseStatementResponse) {}
  rpc CommitTransaction(CommitRequest) returns (CommitResponse) {}
  rpc RollbackTransaction(RollbackRequest) returns (RollbackResponse) {}
  // Properties
  rpc UpdateConnectionProperties(ConnectionProperties) returns (ConnectionPropertiesUpdateResponse){}
  rpc UpdateStatementProperties(StatementProperties) returns (StatementPropertiesUpdateResponse) {}
}

message ConnectionCheckRequest{}

message ConnectionCheckResponse{}

message DisconnectionRequest{}
message DisconnectionResponse{}

message Property {
  oneof value {
    string string_value = 1;
    int32 int_value = 2;
    int64 long_value = 3;
    bool boolean_value = 4;
  }
}

message ConnectionRequest {
  int32 major_api_version = 1;
  int32 minor_api_version = 2;
  string client_uuid = 3;
  optional string username = 5;
  optional string password = 6;
  optional ConnectionProperties connection_properties = 4;
}

message ConnectionReply {
  bool is_compatible = 1;
  int32 major_api_version = 2;
  int32 minor_api_version = 3;
  optional int64 heartbeat_interval = 4;
}

message ConnectionProperties {
  bool is_auto_commit = 1;
}


message ConnectionPropertiesUpdateResponse {
}

message CommitRequest {}
message CommitResponse{}

message RollbackRequest {}
message RollbackResponse{}

message FetchRequest {
  int32 statement_id = 1;
}

message Frame {
  bool isLast = 1;
  oneof result {
    RelationalFrame relational_frame = 2;
    GraphFrame graph_frame = 3;
    DocumentFrame document_frame = 4;
  }
}
